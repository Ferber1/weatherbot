
#TODO: (on new branch) ->  testing not sending main_keyboard permanently
from vk.utils.keyboards import main_keyboard
from vk.settings import INFO_ERROR_RUS, INFO_EXCEPTION_RUS

from datetime import datetime

from vkbottle.bot import Message

from api.weather import get_current_weather, get_info_city

async def send_weather(message: Message, city: str) -> None:
    info = await get_current_weather(city)

    if info == 0: #* if city not found
        return await message.answer(INFO_ERROR_RUS.format(city))
    
    elif info is None: #* elif there is error
        return await message.answer(INFO_EXCEPTION_RUS)
    
    result = f'''
üíô –ü–æ–≥–æ–¥–∞ –≤ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–º –≥–æ—Ä–æ–¥–µ {city.capitalize()}:

ü§ç –û–ø–∏—Å–∞–Ω–∏–µ: 
–í –æ—Å–Ω–æ–≤–Ω–æ–º ‚Äî {info['weather']['main']}
–û–±—Å—Ç–∞–Ω–æ–≤–∫–∞ ‚Äî {info['weather']['description']}

üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:
{info['main']['temp']:.1f} ¬∞C ‚Äî {'–æ–¥–µ–≤–∞–π—Ç–µ—Å—å –ø–æ—Ç–µ–ø–ª–µ–µ ‚ùÑ!' if info['main']['temp'] < 0 else '–∂–∞—Ä–∫–æ–≤–∞—Ç–æ ‚òÄ!'}
–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ –≤—Å–µ {info['main']['feels_like']:.1f} ¬∞C.. üé®
–ú–∏–Ω–∏–º—É–º: {info["main"]['temp_min']:.1f} ¬∞C üíÑ
–ú–∞–∫—Å–∏–º—É–º: {info["main"]['temp_max']:.1f} ¬∞C ü•ü

üå¨ –í–µ—Ç–µ—Ä:
–°–∫–æ—Ä–æ—Å—Ç—å: {info['wind']['speed']} –º/—Å
–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {info['wind']['deg']}¬∞
–ü–æ—Ä—ã–≤—ã: {info['wind'].get('gust', '0')} –º/—Å üå¨
'''
    return await message.answer(result)

async def send_city_info(message: Message, city: str) -> None:
    city_info = await get_info_city(city)

    if city_info == 0: #* if city not found
        return await message.answer(INFO_ERROR_RUS.format(city))
    
    elif city_info is None: #* elif there is error
        return await message.answer(INFO_EXCEPTION_RUS)
    
    result = f'''
üíô –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ—Ä–æ–¥–µ {city.capitalize()}:

üåç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:
–î–æ–ª–≥–æ—Ç–∞: {city_info['lon']}
–®–∏—Ä–æ—Ç–∞: {city_info['lat']}

üëÄ –í–∏–¥–∏–º–æ—Å—Ç—å: {city_info['visibility']} –º

üåÖ –í—Ä–µ–º—è:
–°—Ç—Ä–∞–Ω–∞: {city_info['country']}
–í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞: {datetime.fromtimestamp(city_info['sunrise']).strftime('%Y-%m-%d %H:%M:%S')}
–ó–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞: {datetime.fromtimestamp(city_info['sunset']).strftime('%Y-%m-%d %H:%M:%S')}
'''
    return await message.answer(result)